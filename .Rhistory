run('app')
install.packages("shiny")
source("utils.R")
install.packages("shinythemes")
library(shiny)
ui <- fluidPage(
)
server <- function(input, output, session) {
}
shinyApp(ui, server)
shiny::runGitHub(repo = "pulsex-webapp",username = "Hiesenberg123",ref="main")
install.packages("shiny")
install.packages(c("sourcetools", "shiny"))
shiny::runGitHub(repo = "pulsex-webapp",username = "Hiesenberg123",ref="main")
r-shiny::runGitHub(repo = "pulsex-webapp",username = "Hiesenberg123",ref="main")
install.packages("rlang")
install.packages("shiny")
install.packages(c("later","promises","rlang"))
install.packages(c("later","promises","rlang"))
install.packages(c("shiny"))
install.packages("sass")
install.packages(c("shiny"))
install.packages(c("htmltools"))
install.packages(c("shiny"))
install.packages(c("htmltools"), version=0.5.2)
install.packages("htmltools", version=0.5.2)
install.packages(c("htmltools"), version="0.5.2")
install.packages(c("shiny"))
install.packages(c("htmltools"), version="0.5.3")
install.packages("htmltools")
R.version$version.string
install.packages("htmltools")
install_version("htmltools", version = "0.5.2", repos = "http://cran.us.r-project.org")
install.packages("htmltools", version = "0.5.2", repos = "http://cran.us.r-project.org")
install.packages("C:/Users/Mann/Downloads/htmltools_0.5.2.zip", repos = NULL, type = "win.binary")
install.packages(c("shiny"))
packageVersion('ellipsis')
install.packages("ellipses")
install.packages("ellipsis")
install.packages(c("shiny"))
shiny::runGitHub(repo = "pulsex-webapp",username = "Hiesenberg123",ref="main")
install.packages(c("DT"))
shiny::runGitHub(repo = "pulsex-webapp",username = "Hiesenberg123",ref="main")
install.packages(c("ggpubr"))
shiny::runGitHub(repo = "pulsex-webapp",username = "Hiesenberg123",ref="main")
install.packages(c("car"))
shiny::runGitHub(repo = "pulsex-webapp",username = "Hiesenberg123",ref="main")
R.version$version.string
shiny::runGitHub(repo = "pulsex-webapp",username = "Hiesenberg123",ref="main")
R.version$version.string
R.version$version.string
shiny::runGitHub(repo = "pulsex-webapp",username = "Hiesenberg123",ref="main")
R.version$version.string
install.packages('htmlwidgets')
install.packages("htmlwidgets")
shiny::runGitHub(repo = "pulsex-webapp",username = "Hiesenberg123",ref="main")
install.packages("car")
install.packages("foreign")
R.version$version.string
R.version$version.string
R.version$version.string
setwd("C:/Users/Mann/Downloads/pulsex-webapp-main/pulsex-webapp-main")
shiny::runGitHub(repo = "pulsex-webapp",username = "Hiesenberg123",ref="main")
shiny::runGitHub(repo = "pulsex-webapp",username = "Hiesenberg123",ref="main")
runApp
runApp()
runApp()
shiny::runGitHub(repo = "pulsex-webapp",username = "Hiesenberg123",ref="main")
shiny::runGitHub(repo = "pulsex-webapp",username = "Hiesenberg123",ref="main")
shiny::runGitHub(repo = "pulsex-webapp",username = "Hiesenberg123",ref="main")
run('app')
shiny::run('app')
runApp()
runApp()
shiny::runGitHub(repo = "pulsex-webapp",username = "Hiesenberg123",ref="main")
runApp('puslex-webapp-main')
runApp('./puslex-webapp-main')
runApp('../puslex-webapp-main')
setwd("C:/Users/Mann/Downloads/pulsex-webapp-main")
runApp('puslex-webapp-main')
setwd("C:/Users/Mann/Downloads/pulsex-webapp-main/pulsex-webapp-main")
runApp('app')
runApp('.')
renv::restore()
install.packages('renv')
renv::restore()
renv::restore()
View(Final_DB)
View(Final_DB)
packageVersion("shiny")
packageVersion("rshiny")
shiny::runApp()
shiny:runnApp()
shiny::runnApp()
q()
shiny::runApp()
renv::status()
renv::snapshot()
shiny::runApp()
install.packages('DT')
runApp()
install.packages('ggpubr')
runApp()
install.packages('shiny.route')
runApp()
install.packages('shiny.router')
runApp()
install.packages('shiny.semantic')
runApp()
install.packages('shinyjs')
runApp()
install.packages('leaflet')
runApp()
install.packages('shinythemes')
runApp()
install.packages('wordcloud2')
runApp()
install.packages('shinydashboard')
runApp()
install.packages('shinywidgets')
runApp()
install.packages('shinyWidgets')
runApp()
install.packages('rtweet')
runApp()
install.packages('RSQLite')
runApp()
install.packages('tidytext')
runApp()
install.packages('igraph')
install.packages('ggraph')
runApp()
install.packages('stopwords')
runApp()
install.packages('tm')
runApp()
install.packages('wordcloud')
install.packages('wordcloud')
runApp()
install.packages('latexpdf')
runApp()
install.packages('twitteR')
runApp()
install.packages('qdapRegex')
runApp()
install.packages('rvest')
runApp()
install.packages('chron')
runApp()
install.packages('keras')
runApp()
install.packages('quanteda')
runApp()
install.packages('gutenbergr')
runApp()
install.packages('widyr')
runApp()
runApp()
q()
shiny::runApp()
runApp()
runApp()
runApp()
options(shiny.fullstacktrace=TRUE)
runApp()
options(shiny.fullstacktrace=FALSE)
runApp()
options(shiny.error = recover)
runApp()
options(shiny.error = browser)
runApp()
runApp()
options(shiny.error = None)
options
shiny::runApp()
runApp()
shiny::runApp()
View(src)
View(src)
nrc_joy <- get_sentiments("afinn")
shiny::runApp()
nrc_joy <- get_sentiments("afinn")
get_sentiments("bing")
tidy_books <- Final_DB %>%
unnest_tokens(word, trans)
tidy_books <- Final_DB %>% unnest_tokens(word, trans)
shiny::runApp()
6206 160460
#>  2 Mansfield Park    to     5475 160460
#>  3 Mansfield Park    and    5438 160460
#>  4 Emma              to     5239 160996
#>  5 Emma              the    5201 160996
#>  6 Emma              and    4896 160996
#>  7 Mansfield Park    of     4778 160460
#>  8 Pride & Prejudice the    4331 122204
#>  9 Emma              of     4291 160996
#> 10 Pride & Prejudice to     4162 122204
#> # â€¦ with 40,369 more rows
library(dplyr)
library(janeaustenr)
library(tidytext)
book_words <- austen_books() %>%
unnest_tokens(word, text) %>%
count(book, word, sort = TRUE)
total_words <- book_words %>%
group_by(book) %>%
summarize(total = sum(n))
book_words <- left_join(book_words, total_words)
book_words
View(book_words)
View(book_words)
library(dplyr)
library(janeaustenr)
library(tidytext)
book_words <- austen_books() %>%
unnest_tokens(word, text) %>%
count(book, word, sort = TRUE)
total_words <- book_words %>%
group_by(book) %>%
summarize(total = sum(n))
book_words <- left_join(book_words, total_words)
book_words
freq_by_rank <- book_words %>%
group_by(book) %>%
mutate(rank = row_number(),
`term frequency` = n/total) %>%
ungroup()
freq_by_rank
freq_by_rank %>%
ggplot(aes(rank, `term frequency`, color = book)) +
geom_line(size = 1.1, alpha = 0.8, show.legend = FALSE) +
scale_x_log10() +
scale_y_log10()
rank_subset <- freq_by_rank %>%
filter(rank < 500,
rank > 10)
lm(log10(`term frequency`) ~ log10(rank), data = rank_subset)
freq_by_rank %>%
ggplot(aes(rank, `term frequency`, color = book)) +
geom_abline(intercept = -0.62, slope = -1.1,
color = "gray50", linetype = 2) +
geom_line(size = 1.1, alpha = 0.8, show.legend = FALSE) +
scale_x_log10() +
scale_y_log10()
book_tf_idf <- book_words %>%
bind_tf_idf(word, book, n)
book_tf_idf
View(book_tf_idf)
View(book_tf_idf)
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(janeaustenr)
d <- tibble(txt = prideprejudice)
View(d)
View(d)
d %>%
unnest_tokens(sentence, txt, token = "sentences")
View(d)
View(d)
runApp()
print(">>", "<>")
print(">>")
d %>%
unnest_tokens(sentence, txt, token = "sentences")
d %>%
unnest_tokens(sentence, txt, token = "sentences")
d
runApp()
runApp()
colnames(dataset %>%
unnest_tokens(bigram, trans, token = "ngrams", n = 2))
dataset %>%
unnest_tokens(bigram, trans, token = "ngrams", n = 2)
dataset %>%
unnest_tokens(bigram, trans, token = "ngrams", n = 2
)
d %>%
unnest_tokens(word, txt)
d
d %>%
unnest_tokens(word, txt) >%
runApp()
d %>%
unnest_tokens(bigram, trans, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(!word1 %in% stop_words$word,
!word2 %in% stop_words$word) %>%
count(word1, word2, sort = TRUE)
d %>%
unnest_tokens(bigram, txt, token = "ngrams", n = 2) %>%
separate(bigram, c("word1", "word2"), sep = " ") %>%
filter(!word1 %in% stop_words$word,
!word2 %in% stop_words$word) %>%
count(word1, word2, sort = TRUE)
shiny::runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
news_1<-Final_DB$find()
Final_DB$iterate$one
Final_DB$iterate()$one()
Final_DB$find(`{"week2": "2021-W26"}`)
Final_DB$find(`{"week2": "2021-W26"}`)
Final_DB$find('{"week2": "2021-W26"}')
'a'+'b'
paste('a', 'b', sep='')
paste('a', 'b')
paste('a', 'b', 'c')
runApp()
runApp()
